{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport { database as firebase } from 'firebase';\nimport { getSchoolYear } from '../school/school.selectors';\nvar taskRef = '/classes/';\nexport var FETCH_CLASSES = 'classes/FETCH_CLASSES';\nexport var fetchClassesAction = function fetchClassesAction() {\n  return function (dispatch, getState) {\n    try {\n      var ref = firebase().ref(taskRef).orderByChild('schoolYear').equalTo(getSchoolYear(getState()));\n      var onValueChange = ref.on('value', function (snapshot) {\n        var classes = [];\n        snapshot.forEach(function (childSnapshot) {\n          classes.push(childSnapshot.val());\n        });\n        dispatch({\n          type: FETCH_CLASSES,\n          classes: classes\n        });\n      });\n      return function () {\n        return ref.off('value', onValueChange);\n      };\n    } catch (error) {\n      // eslint-disable-next-line\n      console.error(error);\n      return _Promise.resolve();\n    }\n  };\n};\nexport var ADD_CLASSE = 'classes/ADD_CLASSE';\nexport var addClasseAction = function addClasseAction(classe) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return firebase().ref(taskRef + classe._id).set(classe);\n\n              case 3:\n                _context.next = 5;\n                return dispatch({\n                  type: ADD_CLASSE\n                });\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                // eslint-disable-next-line\n                console.error(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var DELETE_CLASSE = 'classes/DELETE_CLASSE';\nexport var removeClasseAction = function removeClasseAction(classeId) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return firebase().ref(taskRef + classeId).remove();\n\n              case 3:\n                _context2.next = 5;\n                return dispatch({\n                  type: DELETE_CLASSE\n                });\n\n              case 5:\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                // eslint-disable-next-line\n                console.error(_context2.t0);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};","map":null,"metadata":{},"sourceType":"module"}