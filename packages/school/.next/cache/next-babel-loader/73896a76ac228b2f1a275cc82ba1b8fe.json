{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.importStudentsAction = exports.IMPORT_STUDENTS = exports.changeStudentAction = exports.CHANGE_STUDENT = exports.removeStudentAction = exports.REMOVE_STUDENT = exports.addStudentAction = exports.ADD_STUDENT = exports.fetchStudentsAction = exports.FETCH_STUDENTS = void 0;\n\nvar _firebase = require(\"firebase\");\n\nvar _xlsx = _interopRequireDefault(require(\"xlsx\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _school = require(\"../school/school.selectors\");\n\nvar _utils = require(\"../../src/utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar studentsRef = '/students/';\nvar FETCH_STUDENTS = 'tasks/FETCH_STUDENTS';\nexports.FETCH_STUDENTS = FETCH_STUDENTS;\n\nvar fetchStudentsAction = function fetchStudentsAction(classeId) {\n  return function (dispatch) {\n    try {\n      var ref = (0, _firebase.database)().ref(studentsRef).orderByChild('classeId').equalTo(classeId);\n      var onValueChange = ref.on('value', function (snapshot) {\n        dispatch({\n          type: FETCH_STUDENTS,\n          students: snapshot.val() ? Object.values(snapshot.val()) : []\n        });\n      });\n      return function () {\n        return ref.off('value', onValueChange);\n      };\n    } catch (error) {\n      console.error(error);\n      return Promise.resolve();\n    }\n  };\n};\n\nexports.fetchStudentsAction = fetchStudentsAction;\nvar ADD_STUDENT = 'tasks/ADD_STUDENT';\nexports.ADD_STUDENT = ADD_STUDENT;\n\nvar addStudentAction = function addStudentAction(student) {\n  return function () {\n    var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      var studentId;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              studentId = (0, _utils.uuidv4)();\n              _context.next = 4;\n              return (0, _firebase.database)().ref(studentsRef + studentId).set(_objectSpread({}, student, {\n                _id: studentId,\n                schoolYear: (0, _school.getSchoolYear)(getState())\n              }));\n\n            case 4:\n              _context.next = 6;\n              return dispatch({\n                type: ADD_STUDENT\n              });\n\n            case 6:\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexports.addStudentAction = addStudentAction;\nvar REMOVE_STUDENT = 'tasks/REMOVE_STUDENT';\nexports.REMOVE_STUDENT = REMOVE_STUDENT;\n\nvar removeStudentAction = function removeStudentAction(studentId) {\n  return function () {\n    var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(dispatch) {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return (0, _firebase.database)().ref(studentsRef + studentId).remove();\n\n            case 3:\n              _context2.next = 5;\n              return dispatch({\n                type: REMOVE_STUDENT\n              });\n\n            case 5:\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function (_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\n\nexports.removeStudentAction = removeStudentAction;\nvar CHANGE_STUDENT = 'tasks/CHANGE_STUDENT';\nexports.CHANGE_STUDENT = CHANGE_STUDENT;\n\nvar changeStudentAction = function changeStudentAction(student) {\n  return function () {\n    var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(dispatch) {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return (0, _firebase.database)().ref(studentsRef + student._id).set(student);\n\n            case 3:\n              _context3.next = 5;\n              return dispatch({\n                type: CHANGE_STUDENT\n              });\n\n            case 5:\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error(_context3.t0);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n\n    return function (_x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\n\nexports.changeStudentAction = changeStudentAction;\nvar IMPORT_STUDENTS = 'tasks/IMPORT_STUDENTS';\nexports.IMPORT_STUDENTS = IMPORT_STUDENTS;\n\nvar importStudentsAction = function importStudentsAction(pathFile, classeId) {\n  return function () {\n    var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(dispatch) {\n      var oFile, worksheet, text;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              oFile = _xlsx.default.read(pathFile, {\n                type: 'binary'\n              });\n              worksheet = oFile.Sheets[oFile.SheetNames[0]];\n              text = _lodash.default.replace(_xlsx.default.utils.sheet_to_csv(worksheet, {\n                raw: true\n              }), new RegExp(',|\"', 'g'), ' ');\n              _context4.next = 6;\n              return Promise.all(_lodash.default.split(text, '\\n').map(function (line) {\n                return dispatch(addStudentAction({\n                  name: line.trim(),\n                  groupe: 0,\n                  classeId: classeId\n                }));\n              }));\n\n            case 6:\n              _context4.next = 8;\n              return dispatch({\n                type: IMPORT_STUDENTS\n              });\n\n            case 8:\n              _context4.next = 13;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error(_context4.t0);\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 10]]);\n    }));\n\n    return function (_x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\n\nexports.importStudentsAction = importStudentsAction;","map":null,"metadata":{},"sourceType":"script"}