{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport { database as firebase } from 'firebase';\nimport moment from 'moment';\nimport { getSchoolYear } from '../school/school.selectors';\nmoment.locale('fr');\nvar dateRef = '/dates/';\nvar weeksRef = '/weeks/';\nexport var FETCH_DATES = 'calendar/FETCH_DATES';\nexport var fetchDatesAction = function fetchDatesAction() {\n  return function (dispatch) {\n    try {\n      var ref = firebase().ref(dateRef).orderByChild('timestamp').startAt(moment().startOf('week').unix() / 1000);\n      var onValueChange = ref.on('value', function (snapshot) {\n        var dates = [];\n        snapshot.forEach(function (childSnapshot) {\n          dates.push(childSnapshot.val());\n        });\n        dispatch({\n          type: FETCH_DATES,\n          dates: dates\n        });\n      });\n      return function () {\n        return ref.off('value', onValueChange);\n      };\n    } catch (error) {\n      console.error(error);\n      return _Promise.resolve();\n    }\n  };\n};\nexport var ADD_DATE = 'calendar/ADD_DATE';\nexport var addDateAction = function addDateAction(date) {\n  return function () {\n    var _ref = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return firebase().ref(dateRef + date._id).set(date);\n\n            case 3:\n              _context.next = 5;\n              return dispatch({\n                type: ADD_DATE\n              });\n\n            case 5:\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var EDIT_DATE = 'calendar/EDIT_DATE';\nexport var editDateAction = function editDateAction(date) {\n  return function () {\n    var _ref2 = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return firebase().ref(dateRef + date._id).set(date);\n\n            case 3:\n              _context2.next = 5;\n              return dispatch({\n                type: EDIT_DATE\n              });\n\n            case 5:\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var FETCH_WEEK = 'calendar/FETCH_WEEK';\nexport var fetchWeekAction = function fetchWeekAction(date) {\n  return function (dispatch) {\n    try {\n      firebase().ref(weeksRef).orderByChild('date').equalTo(date || moment().startOf('week').format('YYYY.MM.DD')).on('value', function (snapshot) {\n        var week = snapshot.val();\n\n        if (week) {\n          dispatch({\n            type: FETCH_WEEK,\n            week: week[_Object$keys(week)[0]]\n          });\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\nexport var ADD_WEEK = 'calendar/ADD_WEEK';\nexport var addWeekAction = function addWeekAction(date) {\n  return function () {\n    var _ref3 = _asyncToGenerator(_regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return firebase().ref(weeksRef).push().set({\n                date: date,\n                schoolYear: getSchoolYear(getState())\n              });\n\n            case 3:\n              _context3.next = 5;\n              return dispatch({\n                type: ADD_WEEK\n              });\n\n            case 5:\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error(_context3.t0);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};","map":null,"metadata":{},"sourceType":"module"}