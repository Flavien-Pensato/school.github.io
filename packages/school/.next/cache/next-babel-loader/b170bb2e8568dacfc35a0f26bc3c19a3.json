{"ast":null,"code":"\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DataManager = function () {\n  function DataManager(data) {\n    _classCallCheck(this, DataManager);\n\n    this.data = new Map(data);\n  }\n\n  _createClass(DataManager, [{\n    key: \"getData\",\n    value: function getData() {\n      return this.data;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this.data.get(key);\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      this.data.set(key, value);\n    }\n  }, {\n    key: \"overwrite\",\n    value: function overwrite(data) {\n      this.data = new Map(data);\n    }\n  }]);\n\n  return DataManager;\n}();\n\nexports.DataManager = DataManager;","map":null,"metadata":{},"sourceType":"script"}