{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _styled from \"@emotion/styled-base\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\nimport { Button } from '../../../components/button';\n\nconst PurpleButton = _styled(\"button\", {\n  target: \"e1h6dhwx0\",\n  label: \"PurpleButton\"\n})({\n  name: \"1eceyng\",\n  styles: \"font-size:0.875rem;padding:0.5rem 1rem;background-color:purple;font-weight:700;display:inline-block;border-color:#000;border-style:solid;border-width:1px;\"\n});\n\nconst Item = _styled(\"li\", {\n  target: \"e1h6dhwx1\",\n  label: \"Item\"\n})({\n  name: \"1lpsg3w\",\n  styles: \"display:flex;justify-content:space-between;align-items:center;padding:0.3rem 0;border-color:rgba(0,0,0,.2);border-bottom-style:solid;border-bottom-width:1px;\"\n});\n\nclass ClasseItem extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n\n    _defineProperty(this, \"handleClickItem\", function (event) {\n      event.preventDefault();\n      const {\n        removeItem,\n        classe\n      } = _this.props;\n      removeItem(classe._id);\n    });\n  }\n\n  render() {\n    const {\n      classe\n    } = this.props;\n    return __jsx(Item, null, __jsx(Link, {\n      to: `/classes/${classe._id}`\n    }, __jsx(\"span\", null, classe.name)), __jsx(PurpleButton, {\n      onClick: this.handleClickItem\n    }, \"Supprimer\"));\n  }\n\n}\n\nconst List = _styled(\"ul\", {\n  target: \"e1h6dhwx2\",\n  label: \"List\"\n})({\n  name: \"lsly4i\",\n  styles: \"list-style-type:none;padding:0;\"\n});\n\nexport class ClassesList extends Component {\n  componentDidMount() {\n    const {\n      fetchClasses\n    } = this.props;\n    this.stopFetching = fetchClasses();\n  }\n\n  componentWillUnmount() {\n    this.stopFetching();\n  }\n\n  render() {\n    const {\n      classes,\n      removeClasse\n    } = this.props;\n\n    const classesSorted = _.sortBy(classes, ['name']);\n\n    return __jsx(\"div\", null, __jsx(List, null, classesSorted.map(function (classe) {\n      return __jsx(ClasseItem, {\n        key: classe.name,\n        classe: classe,\n        removeItem: removeClasse\n      });\n    })));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}